# Add facter grid
gg <- gg + facet_grid(. ~ HEALTHTYPE)
# Add bars to the plot
gg <- gg + geom_bar(stat = "identity")
# Add labels text
gg <- gg + xlab("Event type") + ylab("Quantity")
# Rotate labels 45 deggrees
gg <- gg + theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(gg)
plots <- lapply(split(popHealth, popHealth$HEALTHTYPE), function (x) {
p <- ggplot(x, aes(x = EVTYPE, y = VALUE, fill = HEALTHTYPE)) +
geom_bar(stat = "identity") +
scale_fill_discrete(drop=F) +
theme_bw() +
theme(legend.position="none") +
coord_flip()
})
do.call(grid.arrange,(c(plots, ncol=3)))
library(grid)
do.call(grid.arrange,(c(plots, ncol=3)))
do.call("grid.arrange",(c(plots, ncol=3)))
gg <- ggplot(popHealth, aes(x = EVTYPE, y = VALUE))
# Add facter grid
gg <- gg + facet_grid(. ~ HEALTHTYPE)
# Add bars to the plot
gg <- gg + geom_bar(stat = "identity")
# Add labels text
gg <- gg + xlab("Event type") + ylab("Quantity")
# Rotate labels 45 deggrees
gg <- gg + theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(gg)
gg <- ggplot(popHealth, aes(x = EVTYPE, y = VALUE))
# Add facter grid
gg <- gg + facet_grid(. ~ HEALTHTYPE)
# Add bars to the plot
gg <- gg + geom_bar(stat = "identity")
# Add labels text
gg <- gg + xlab("Event type") + ylab("Quantity")
# Rotate labels 45 deggrees
gg <- gg + theme(axis.text.x = element_text(angle = 45, hjust = 1))
gg <- gg + geom_text(label = VALUE)
print(gg)
gg <- ggplot(popHealth, aes(x = EVTYPE, y = VALUE))
# Add facter grid
gg <- gg + facet_grid(. ~ HEALTHTYPE)
# Add bars to the plot
gg <- gg + geom_bar(stat = "identity")
# Add labels text
gg <- gg + xlab("Event type") + ylab("Quantity")
# Rotate labels 45 deggrees
gg <- gg + theme(axis.text.x = element_text(angle = 45, hjust = 1))
gg <- gg + geom_text()
print(gg)
gg <- ggplot(popHealth, aes(x = EVTYPE, y = VALUE))
# Add facter grid
gg <- gg + facet_grid(. ~ HEALTHTYPE)
# Add bars to the plot
gg <- gg + geom_bar(stat = "identity")
# Add labels text
gg <- gg + xlab("Event type") + ylab("Quantity")
# Rotate labels 45 deggrees
gg <- gg + theme(axis.text.x = element_text(angle = 45, hjust = 1))
gg <- gg + geom_text(aes(label = VALUE))
print(gg)
gg <- ggplot(popHealth, aes(x = EVTYPE, y = VALUE))
# Add facter grid
gg <- gg + facet_grid(HEALTHTYPE ~ .)
# Add bars to the plot
gg <- gg + geom_bar(stat = "identity")
# Add labels text
gg <- gg + xlab("Event type") + ylab("Quantity")
# Rotate labels 45 deggrees
gg <- gg + theme(axis.text.x = element_text(angle = 45, hjust = 1))
gg <- gg + geom_text(aes(label = VALUE))
print(gg)
gg <- ggplot(popHealth, aes(x = EVTYPE, y = VALUE))
# Add facter grid
gg <- gg + facet_grid(HEALTHTYPE ~ .)
# Add bars to the plot
gg <- gg + geom_bar(stat = "identity")
# Add labels text
gg <- gg + xlab("Event type") + ylab("Quantity")
# Rotate labels 45 deggrees
gg <- gg + theme(axis.text.x = element_text(angle = 45, hjust = 1))
gg <- gg + geom_text(aes(label = VALUE), vjust = -0.3)
print(gg)
96979 / 8428
popHealth
# Select EVTYPE, FATALITIES and INJURIES
popHealth <- data %>%
select(EVTYPE, FATALITIES, INJURIES) %>%
filter(EVTYPE != "?")
unique(popHealth$EVTYPE)
names(data)
head(data$STATE__)
tail(data$STATE__)
names(data)
econConseq <- data %>% select(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
dim(econConseq)
head(econConseq)
unique(econConseq$PROPDMGEXP)
unique(econConseq$CROPDMGEXP)
parseExp <- c(" " = 10^0)
parseExp
parseExp$
levels(econConseq$PROPDMGEXP)
!!""
"" == ""
parseExp <- c("0" = 10^0)
parseExp
parseExp$0
parseExp <- c("0" = 10^0, "-" = 10^0)
parseExp
parseExp[as.character(0)]
parseExp$0
parseExp <- function (ex) {
if(as.character(ex) == "1") return (1)
}
toupper("h")
toupper("")
unique(econConseq$PROPDMGEXP)
10^5
numeric(10^5)
unique(econConseq$PROPDMGEXP)
parseExp <- function (ex) {
cex <- toupper(as.character(ex))
if(cex == "1") return (10^1)
if(cex == "2" | cex == "H") return (10^2)
if(cex == "3" | cex == "K") return (10^3)
if(cex == "4") return (10^4)
if(cex == "5") return (10^5)
if(cex == "6" | cex == "M") return (10^6)
if(cex == "7") return (10^7)
if(cex == "8") return (10^8)
if(cex == "9" | cex == "B") return (10^9)
return (0)
}
head(econConseq)
econConseq$PROPDMGEXP <- parseExp(econConseq$PROPDMGEXP)
econConseq$PROPDMGEXPN <- parseExp(econConseq$PROPDMGEXP)
econConseq <- data %>%
select(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
econConseq$PROPDMGEXPN <- parseExp(econConseq$PROPDMGEXP)
head(econConseq)
head(econConseq[econConseq$PROPDMGEXP == "1",])
head(econConseq)
head(econConseq[econConseq$PROPDMGEXP == "1",])
head(econConseq[econConseq$PROPDMGEXP == "2",])
head(econConseq[econConseq$PROPDMGEXP == "H",])
econConseq[216476,]
econConseq[216476,]$PROPDMGEXP
parseExp()
parseExp(econConseq[216476,]$PROPDMGEXP)
parseExp <- function (ex) {
cex <- toupper(as.character(ex))
if(cex == "1") return (10^1)
if(cex == "2" | cex == "H") return (10^2)
if(cex == "3" | cex == "K") return (10^3)
if(cex == "4") return (10^4)
if(cex == "5") return (10^5)
if(cex == "6" | cex == "M") return (10^6)
if(cex == "7") return (10^7)
if(cex == "8") return (10^8)
if(cex == "9" | cex == "B") return (10^9)
return (0)
}
for(i in nrow(econConseq)) {
econConseq$PROPDMGEXPN[i] = parseExp(econConseq$PROPDMGEXP[i])
}
head(econConseq)
head(econConseq[econConseq$PROPDMGEXP == "1",])
for(i in nrow(econConseq))
econConseq$PROPDMGEXPN[i] = parseExp(econConseq$PROPDMGEXP[i])
econConseq <- data %>%
select(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
head(econConseq[econConseq$PROPDMGEXP == "1",])
for(i in nrow(econConseq))
econConseq$PROPDMGEXPN[i] = parseExp(econConseq$PROPDMGEXP[i])
parseExp(econConseq[233829,]$PROPDMGEXP)
for(i in nrow(econConseq))
econConseq$PROPDMGEXPN[i] = parseExp(econConseq$PROPDMGEXP[i])
head(econConseq[econConseq$PROPDMGEXP == "1",])
for(i in nrow(econConseq))
econConseq$PROPDMGEXPN[i] <- parseExp(econConseq$PROPDMGEXP[i])
head(econConseq[econConseq$PROPDMGEXP == "1",])
str(econConseq)
head(econConseq)
parseExp <- function (ex) {
cex <- toupper(as.character(ex))
if(cex == "1") return (10^1)
if(cex == "2" | cex == "H") return (10^2)
if(cex == "3" | cex == "K") return (10^3)
if(cex == "4") return (10^4)
if(cex == "5") return (10^5)
if(cex == "6" | cex == "M") return (10^6)
if(cex == "7") return (10^7)
if(cex == "8") return (10^8)
if(cex == "9" | cex == "B") return (10^9)
return (10^0)
}
econConseq <- data %>%
select(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
head(econConseq[econConseq$PROPDMGEXP == "1",])
nrow(econConseq)
for(i in nrow(econConseq))
econConseq[i,]$PROPDMGEXPN <- parseExp(econConseq[i,]$PROPDMGEXP)
for(i in nrow(econConseq))
econConseq$PROPDMGEXPN[i] <- parseExp(econConseq$PROPDMGEXP[i])
head(econConseq)
econConseq$PROPDMGEXPN[1] <- parseExp(econConseq$PROPDMGEXP[1])
head(econConseq)
for(i in 1:nrow(econConseq))
econConseq$PROPDMGEXPN[i] <- parseExp(econConseq$PROPDMGEXP[i])
t <- lapply(econConseq$PROPDMGEXP, parseExp)
head(t)
t <- sapply(econConseq$PROPDMGEXP, parseExp)
head(t)
t[253243]
econConseq$PROPDMGEXP <- sapply(econConseq$PROPDMGEXP, parseExp)
parseExp <- function (ex) {
cex <- toupper(as.character(ex))
if(cex == "1") return (10^1)
if(cex == "2" | cex == "H") return (10^2)
if(cex == "3" | cex == "K") return (10^3)
if(cex == "4") return (10^4)
if(cex == "5") return (10^5)
if(cex == "6" | cex == "M") return (10^6)
if(cex == "7") return (10^7)
if(cex == "8") return (10^8)
if(cex == "9" | cex == "B") return (10^9)
return (10^0)
}
econConseq <- data %>%
select(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
econConseq$PROPDMGEXPN <- sapply(econConseq$PROPDMGEXP, parseExp)
head(econConseq)
head(econConseq[econConseq$PROPDMGEXP == 1,])
head(econConseq[econConseq$PROPDMGEXP == 2,])
head(econConseq[econConseq$PROPDMGEXP == H,])
head(econConseq[econConseq$PROPDMGEXP == "H",])
head(econConseq[econConseq$PROPDMGEXP == "h",])
head(econConseq[econConseq$PROPDMGEXP == "m",])
head(econConseq[econConseq$PROPDMGEXP == "M",])
head(econConseq[econConseq$PROPDMGEXP == "b",])
head(econConseq[econConseq$PROPDMGEXP == "B",])
head(econConseq[econConseq$PROPDMGEXP == "k",])
head(econConseq[econConseq$PROPDMGEXP == "K",])
parseExp <- function (ex) {
cex <- toupper(as.character(ex))
if(cex == "1") return (10^1)
if(cex == "2" | cex == "H") return (10^2)
if(cex == "3" | cex == "K") return (10^3)
if(cex == "4") return (10^4)
if(cex == "5") return (10^5)
if(cex == "6" | cex == "M") return (10^6)
if(cex == "7") return (10^7)
if(cex == "8") return (10^8)
if(cex == "9" | cex == "B") return (10^9)
return (10^0)
}
econConseq <- data %>%
select(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
econConseq$PROPDMGEXP <- sapply(econConseq$PROPDMGEXP, parseExp)
econConseq$CROPDMGEXP <- sapply(econConseq$CROPDMGEXP, parseExp)
econConseq$PROPDMG <- econConseq$PROPDMG * econConseq$PROPDMGEXP
econConseq$CROPDMG <- econConseq$CROPDMG * econConseq$CROPDMGEXP
econConseq <- select(-c(PROPDMGEXP, CROPDMGEXP))
head(econConseq)
econConseq <- select(econConseq, -c(PROPDMGEXP, CROPDMGEXP))
head(data$PROPDMG)
head(data$PROPDMGEXP)
head(econConseq)
econConseq$TOTAL <- econConseq$PROPDMG + econConseq$CROPDMG
head(data$PROPDMGEXP)
econConseq[1:10,]
econConseq[1000:1001,]
econConseq[10000:10001,]
econConseq[20000:20001,]
econConseq[40000:40001,]
econConseq[60000:60001,]
econConseq[600000:600001,]
econConseq <- melt(econConseq, id = c("EVTYE"))
econConseq <- melt(econConseq, id = c("EVTYPE"))
dim(econConseq)
# Order by most problematic for population health
econConseq <- group_by(econConseq, EVTYPE) %>%
summarise_each(funs(sum)) %>%
as.data.frame() %>%
arrange(-TOTAL)
# Generate a table of the top 10 results
econConseq <- econConseq[1:30,]
str(econConseq)
# Function to return the numerical equivalent to the exponencial character
parseExp <- function (ex) {
cex <- toupper(as.character(ex))
if(cex == "1") return (10^1)
if(cex == "2" | cex == "H") return (10^2)
if(cex == "3" | cex == "K") return (10^3)
if(cex == "4") return (10^4)
if(cex == "5") return (10^5)
if(cex == "6" | cex == "M") return (10^6)
if(cex == "7") return (10^7)
if(cex == "8") return (10^8)
if(cex == "9" | cex == "B") return (10^9)
return (10^0)
}
econConseq <- data %>%
select(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
econConseq$PROPDMGEXP <- sapply(econConseq$PROPDMGEXP, parseExp)
econConseq$CROPDMGEXP <- sapply(econConseq$CROPDMGEXP, parseExp)
econConseq$PROPDMG <- econConseq$PROPDMG * econConseq$PROPDMGEXP
econConseq$CROPDMG <- econConseq$CROPDMG * econConseq$CROPDMGEXP
econConseq <- select(econConseq, -c(PROPDMGEXP, CROPDMGEXP))
econConseq$TOTAL <- econConseq$PROPDMG + econConseq$CROPDMG
# Order by most problematic for population health
econConseq <- group_by(econConseq, EVTYPE) %>%
summarise_each(funs(sum)) %>%
as.data.frame() %>%
arrange(-TOTAL)
# Generate a table of the top 10 results
econConseq <- econConseq[1:30,]
conCon
econConseq
formatC(econConseq, format = "d", big.mark = ",")
formatC(econConseq[2:4], format = "d", big.mark = ",")
formatC(econConseq[2:4], format = "n", big.mark = ",")
prettyNum(econConseq$TOTAL, big.mark = ",")
prettyNum(econConseq$TOTAL[20], big.mark = ",")
econConseq$TOTAL[20]
CLASS(econConseq$TOTAL[20])
class(econConseq$TOTAL[20])
prettyNum(econConseq$TOTAL[20], big.mark = ".")
prettyNum(econConseq$TOTAL[20], big.mark = " ")
econConseq$TOTAL
head(econConseq)
econConseq <- melt(econConseq, id = c("EVTYPE"))
head(econConseq)
names(econConseq) <- c("EVTYPE", "DMGTYPE", "VALUE")
gg <- ggplot(econConseq, aes(x = EVTYPE, y = VALUE))
econConseq$EVTYPE <- factor(econConseq$EVTYPE)
econConseq$DMGTYPE <- factor(econConseq$DMGTYPE)
gg <- ggplot(econConseq, aes(x = EVTYPE, y = VALUE))
gg <- gg + facet_grid(DMGTYPE ~ .)
gg <- gg + geom_bar(stat = "identity")
gg
gg <- ggplot(econConseq, aes(x = EVTYPE, y = VALUE, fill = DMGTYPE))
gg <- gg + geom_bar(stat = "identity")
gg
gg <- ggplot(econConseq, aes(x = EVTYPE, y = VALUE, fill = DMGTYPE))
gg <- gg + geom_bar(stat = "identity", position = "dodge")
gg
parseExp <- function (ex) {
cex <- toupper(as.character(ex))
if(cex == "1") return (10^1)
if(cex == "2" | cex == "H") return (10^2)
if(cex == "3" | cex == "K") return (10^3)
if(cex == "4") return (10^4)
if(cex == "5") return (10^5)
if(cex == "6" | cex == "M") return (10^6)
if(cex == "7") return (10^7)
if(cex == "8") return (10^8)
if(cex == "9" | cex == "B") return (10^9)
return (10^0)
}
econConseq <- data %>%
select(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
econConseq$PROPDMGEXP <- sapply(econConseq$PROPDMGEXP, parseExp)
econConseq$CROPDMGEXP <- sapply(econConseq$CROPDMGEXP, parseExp)
econConseq$PROPDMG <- econConseq$PROPDMG * econConseq$PROPDMGEXP
econConseq$CROPDMG <- econConseq$CROPDMG * econConseq$CROPDMGEXP
econConseq <- select(econConseq, -c(PROPDMGEXP, CROPDMGEXP))
econConseq$TOTAL <- econConseq$PROPDMG + econConseq$CROPDMG
# Order by most problematic for population health
econConseq <- group_by(econConseq, EVTYPE) %>%
summarise_each(funs(sum)) %>%
as.data.frame() %>%
arrange(-TOTAL)
# Generate a table of the top 10 results
econConseq <- econConseq[1:10,]
econConseq <- melt(econConseq, id = c("EVTYPE"))
names(econConseq) <- c("EVTYPE", "DMGTYPE", "VALUE")
econConseq$EVTYPE <- factor(econConseq$EVTYPE)
econConseq$DMGTYPE <- factor(econConseq$DMGTYPE)
econConseq
arrange(econConseq, -c(EVTYPE,DMGTYPE,VALUE))
arrange(econConseq, -(EVTYPE,DMGTYPE,VALUE))
arrange(econConseq, -EVTYPE, -DMGTYPE, -VALUE)
arrange(econConseq, -EVTYPE)
arrange(econConseq, EVTYPE)
arrange(econConseq, c(EVTYPE))
arrange(econConseq, -c(EVTYPE))
arrange(econConseq, desc(EVTYPE))
arrange(econConseq, EVTYPE)
arrange(econConseq, EVTYPE, DMGTYPE)
econConseq <- data %>%
select(EVTYPE, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
econConseq$PROPDMGEXP <- sapply(econConseq$PROPDMGEXP, parseExp)
econConseq$CROPDMGEXP <- sapply(econConseq$CROPDMGEXP, parseExp)
econConseq$PROPDMG <- econConseq$PROPDMG * econConseq$PROPDMGEXP
econConseq$CROPDMG <- econConseq$CROPDMG * econConseq$CROPDMGEXP
econConseq <- select(econConseq, -c(PROPDMGEXP, CROPDMGEXP))
econConseq$TOTAL <- econConseq$PROPDMG + econConseq$CROPDMG
# Order by most problematic for population health
econConseq <- group_by(econConseq, EVTYPE) %>%
summarise_each(funs(sum)) %>%
as.data.frame() %>%
arrange(-TOTAL)
# Generate a table of the top 10 results
econConseq <- econConseq[1:10,]
temp <- melt(econConseq, id = c("EVTYPE"))
temp
gg <- ggplot(temp, aes(x = EVTYPE, y = value, fill = variable))
gg + geom_bar(stat = "identity", position = "dodge")
gg <- ggplot(temp, aes(x = reorder(EVTYPE, -value), y = value, fill = variable))
gg + geom_bar(stat = "identity", position = "dodge")
gg <- ggplot(temp, aes(x = reorder(EVTYPE, -value), y = value))
gg <- gg + facet_grid(. ~ DMGTYPE)
gg + geom_bar()
gg <- ggplot(temp, aes(x = reorder(EVTYPE, -value), y = value))
gg <- gg + facet_grid(. ~ variable)
gg + geom_bar()
gg + geom_bar(stat = "identity")
dim(econConseq)
econConseq
econConseqPlot <- melt(econConseq, id = c("EVTYPE"))
econConseqPlot
econConseqPlot <- melt(econConseq, id = c("EVTYPE"))
names(econConseqPlot) <- c("EVTYPE", "DMGTYPE", "VALUE")
econConseqPlot$EVTYPE <- factor(econConseqPlot$EVTYPE)
econConseqPlot$DMGTYPE <- factor(econConseqPlot$DMGTYPE)
gg <- ggplot(econConseqPlot, aes(x = reorder(EVTYPE, -VALUE), y = VALUE))
gg <- gg + facet(. ~ DMGTYPE,
labeller = as_labeller(c(
"PROPDMG" = "Property",
"CROPDMG" = "Crop",
"TOTAL" = "Total")))
gg <- gg + geom_bar(stat = "identity")
print(gg)
library(reshape2)
econConseqPlot <- melt(econConseq, id = c("EVTYPE"))
names(econConseqPlot) <- c("EVTYPE", "DMGTYPE", "VALUE")
econConseqPlot$EVTYPE <- factor(econConseqPlot$EVTYPE)
econConseqPlot$DMGTYPE <- factor(econConseqPlot$DMGTYPE)
gg <- ggplot(econConseqPlot, aes(x = reorder(EVTYPE, -VALUE), y = VALUE))
gg <- gg + facet(. ~ DMGTYPE,
labeller = as_labeller(c(
"PROPDMG" = "Property",
"CROPDMG" = "Crop",
"TOTAL" = "Total")))
gg <- gg + geom_bar(stat = "identity")
print(gg)
library(reshape2)
library(ggplot2)
econConseqPlot <- melt(econConseq, id = c("EVTYPE"))
names(econConseqPlot) <- c("EVTYPE", "DMGTYPE", "VALUE")
econConseqPlot$EVTYPE <- factor(econConseqPlot$EVTYPE)
econConseqPlot$DMGTYPE <- factor(econConseqPlot$DMGTYPE)
gg <- ggplot(econConseqPlot, aes(x = reorder(EVTYPE, -VALUE), y = VALUE))
gg <- gg + facet(. ~ DMGTYPE,
labeller = as_labeller(c(
"PROPDMG" = "Property",
"CROPDMG" = "Crop",
"TOTAL" = "Total")))
gg <- gg + geom_bar(stat = "identity")
print(gg)
econConseqPlot <- melt(econConseq, id = c("EVTYPE"))
econConseqPlot
names(econConseqPlot) <- c("EVTYPE", "DMGTYPE", "VALUE")
econConseqPlot$EVTYPE <- factor(econConseqPlot$EVTYPE)
econConseqPlot$DMGTYPE <- factor(econConseqPlot$DMGTYPE)
gg <- ggplot(econConseqPlot, aes(x = reorder(EVTYPE, -VALUE), y = VALUE))
gg <- gg + facet(. ~ DMGTYPE,
labeller = as_labeller(c(
"PROPDMG" = "Property",
"CROPDMG" = "Crop",
"TOTAL" = "Total")))
gg <- gg + geom_bar(stat = "identity")
print(gg)
gg <- ggplot(econConseqPlot, aes(x = reorder(EVTYPE, -VALUE), y = VALUE))
gg <- gg + facet(. ~ DMGTYPE)
gg <- gg + geom_bar(stat = "identity")
gg
library(reshape2)
library(ggplot2)
econConseqPlot <- melt(econConseq, id = c("EVTYPE"))
names(econConseqPlot) <- c("EVTYPE", "DMGTYPE", "VALUE")
econConseqPlot$EVTYPE <- factor(econConseqPlot$EVTYPE)
econConseqPlot$DMGTYPE <- factor(econConseqPlot$DMGTYPE)
gg <- ggplot(econConseqPlot, aes(x = reorder(EVTYPE, -VALUE), y = VALUE))
gg <- gg + facet_grid(. ~ DMGTYPE,
labeller = as_labeller(c(
"PROPDMG" = "Property",
"CROPDMG" = "Crop",
"TOTAL" = "Total")))
gg <- gg + geom_bar(stat = "identity")
print(gg)
library(reshape2)
library(ggplot2)
econConseqPlot <- melt(econConseq, id = c("EVTYPE"))
names(econConseqPlot) <- c("EVTYPE", "DMGTYPE", "VALUE")
econConseqPlot$EVTYPE <- factor(econConseqPlot$EVTYPE)
econConseqPlot$DMGTYPE <- factor(econConseqPlot$DMGTYPE)
gg <- ggplot(econConseqPlot, aes(x = reorder(EVTYPE, -VALUE), y = VALUE))
gg <- gg + facet_grid(. ~ DMGTYPE,
labeller = as_labeller(c(
"PROPDMG" = "Property",
"CROPDMG" = "Crop",
"TOTAL" = "Total")))
gg <- gg + geom_bar(stat = "identity")
gg <- gg + theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(gg)
gg <- gg + geom_text(aes(label = VALUE), vjust = -0.3)
